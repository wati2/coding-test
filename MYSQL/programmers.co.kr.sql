-- 모든 레코드 조회하기
SELECT * 
FROM ANIMAL_INS 
ORDER BY ANIMAL_ID ASC;

-- 역순 정렬하기
SELECT NAME, DATETIME 
FROM ANIMAL_INS 
ORDER BY ANIMAL_ID DESC

-- 아픈 동물 찾기
SELECT ANIMAL_ID, NAME 
FROM ANIMAL_INS 
WHERE INTAKE_CONDITION = 'SICK' 
ORDER BY ANIMAL_ID;

-- 동물의 아이디와 이름
SELECT ANIMAL_ID, NAME FROM 
ANIMAL_INS

-- 여러 기준으로 정렬하기
SELECT ANIMAL_ID, NAME, DATETIME 
FROM ANIMAL_INS 
ORDER BY NAME ASC, DATETIME DESC

-- 상위 N개 레코드 (MAX, MIN 으로 대체 가능)
SELECT NAME 
FROM ANIMAL_INS 
ORDER BY DATETIME 
LIMIT 1

-- 최댓값 구하기
SELECT DATETIME 
FROM ANIMAL_INS 
ORDER BY DATETIME DESC 
LIMIT 1;

-- 최솟값 구하기
SELECT DATETIME AS '시간' 
FROM ANIMAL_INS 
ORDER BY DATETIME ASC 
LIMIT 1

-- 동물 수 구하기
SELECT COUNT(*) 
FROM ANIMAL_INS

-- 중복 제거하기
SELECT COUNT(DISTINCT NAME) 
FROM ANIMAL_INS 
WHERE NAME IS NOT NULL

-- 고양이와 개는 몇마리 있을까
SELECT ANIMAL_TYPE, COUNT(ANIMAL_TYPE) 
FROM ANIMAL_INS 
GROUP BY ANIMAL_TYPE 
ORDER BY ANIMAL_TYPE

-- 동명 동물 수 찾기
SELECT NAME, COUNT(NAME)
FROM ANIMAL_INS 
WHERE NAME IS NOT NULL
GROUP BY NAME 
HAVING COUNT(NAME) >= 2
ORDER BY NAME

-- 입양 시각 구하기(1)
SELECT 
    HOUR(DATETIME) AS HOUR, 
    COUNT(HOUR(DATETIME)) AS COUNT 
FROM ANIMAL_OUTS 
WHERE 
    HOUR(DATETIME) >= 9 AND 
    HOUR(DATETIME) < 20
GROUP BY HOUR(DATETIME) 
ORDER BY HOUR(DATETIME) ASC

-- 입양 시각 구하기(2)
-- 변수 설정..
SET @HOUR:=-1; 

SELECT (@HOUR := @HOUR + 1)             AS HOUR, 
       (SELECT COUNT(*) AS COUNT 
        FROM   ANIMAL_OUTS 
        WHERE  HOUR(DATETIME) = @HOUR)  AS COUNT 
FROM   ANIMAL_OUTS 
WHERE  @HOUR < 23

-- 이름이 없는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NULL

-- 이름이 있는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NOT NULL
ORDER BY ANIMAL_ID

-- NULL 처리하기
SELECT ANIMAL_TYPE, IFNULL(NAME,'No name'), SEX_UPON_INTAKE
FROM ANIMAL_INS
ORDER BY ANIMAL_ID ASC

-- 없어진 기록 찾기
SELECT outs.ANIMAL_ID, outs.NAME
FROM ANIMAL_OUTS outs
LEFT JOIN ANIMAL_INS ins
ON ins.ANIMAL_ID = outs.ANIMAL_ID
WHERE ins.ANIMAL_ID IS NULL

-- 있는데요 없었습니다
SELECT ins.ANIMAL_ID, ins.NAME
FROM ANIMAL_INS ins
LEFT JOIN ANIMAL_OUTS outs
ON ins.ANIMAL_ID = outs.ANIMAL_ID
WHERE ins.DATETIME > outs.DATETIME
ORDER BY ins.DATETIME

-- 오랜기간 보호한 동물(1)
SELECT ins.NAME, ins.DATETIME
FROM ANIMAL_INS ins
LEFT JOIN ANIMAL_OUTS outs
ON ins.ANIMAL_ID = outs.ANIMAL_ID
WHERE outs.ANIMAL_ID IS NULL
ORDER BY ins.DATETIME
LIMIT 3

-- 보호소에서 중성화한 동물
-- ON에 조건 거는 것과, WHERE에 조건 거는 것 차이..?
SELECT ins.ANIMAL_ID, ins.ANIMAL_TYPE, ins.NAME
FROM ANIMAL_INS ins
LEFT JOIN ANIMAL_OUTS outs
ON ins.ANIMAL_ID = outs.ANIMAL_ID
AND ins.SEX_UPON_INTAKE != outs.SEX_UPON_OUTCOME
WHERE outs.SEX_UPON_OUTCOME REGEXP '.*Spayed.*|.*Neutered.*'

-- 루시와 엘라 찾기
-- REGEXP 활용
SELECT ANIMAL_ID, NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS
WHERE NAME REGEXP '^Lucy$|^Ella$|^Pickle$|^Rogan$|^Sabrina$|^Mitty$'
ORDER BY ANIMAL_ID

-- 이름에 el이 들어가는 멍멍이 찾기
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE LOWER(NAME) REGEXP '.*el.*'
AND ANIMAL_TYPE = 'Dog'
ORDER BY NAME

-- 중성화 여부 파악하기
SELECT 
    ANIMAL_ID, 
    NAME, 
    IF(SEX_UPON_INTAKE REGEXP '.*Spayed.*|Neutered','O','X') as 중성화
FROM ANIMAL_INS
ORDER BY ANIMAL_ID

-- 오랜기간 보호한 동물(2)
-- TIMESTAMPDIFF()
SELECT outs.ANIMAL_ID, outs.NAME
FROM ANIMAL_OUTS outs
LEFT JOIN ANIMAL_INS ins
ON outs.ANIMAL_ID = ins.ANIMAL_ID
ORDER BY TIMESTAMPDIFF(SECOND,ins.DATETIME,outs.DATETIME) DESC
LIMIT 2

-- DATETIME에서 DATE로 변환
-- yyyy-MM-dd
SELECT ANIMAL_ID, NAME, DATE_FORMAT(DATETIME, '%Y-%m-%d') as 날짜
FROM ANIMAL_INS
ORDER BY ANIMAL_ID